package.path = '?.lua'
package.cpath = '?.so;?.dll'
local opus = require 'lem.opus.core'

local streams = {
{112,11,230,89,48,220,11,220,219,102,179,164,232,64,128} ,
{112,128,23,118,246,161,161,252,80,137,92,222,6,122,144,17,173,229,104,15,250,184,60,180,164} ,
{112,130,135,115,3,107,92,225,78,228,12,189,184,228,75,235,32,210,5,213,254,56,191,96,43,223,173,22,0,248,157,9} ,
{112,131,27,247,229,60,98,246,239,27,206,74,12,241,114,192,101,148,140,188,127,136,115,235,53} ,
{112,130,142,36,9,106,178,181,185,148,201,187,232,78,1,16,66,191,71,67,88,169,100,238} ,
{112,130,1,129,62,28,255,195,247,22,243,96,145,198,87,237,195,129,121,183,139,134,244,101,101,114,77,9,183,199,112} ,
{112,130,247,96,7,5,175,58,118,248,90,10,215,254,67,137,117,50,30,39,148,139,146,128,150,23,123,3,224} ,
{112,143,37,172,152,196,31,135,224,108,173,111,146,124,219,130,32,10,189,130,173,118,94,120,46,210,218,25} ,
{112,143,37,212,203,70,232,137,48,34,181,253,112,75,65,123,122,231,152,167,200,4,145,65,117,144,209,165,215,161}
}


local stream_list = {}
for i, istream in ipairs(streams) do
  local buf = {}
  for k, v in ipairs(istream) do
    buf[#buf+1] = string.char(v)
  end
  stream_list[#stream_list+1] = table.concat(buf);
end

-- sampelrate, channels
local enc = opus.new_encoder(48000, 1, 24000, 0)
local dec = opus.new_decoder(48000, 1)
for v, stream in ipairs(stream_list) do
  local test = dec:decode(stream_list[1],0)

  local pl, err = enc:encode(test)
  if pl then
    print('in', #stream_list[1],'s=', #test, 'enc->',#pl)
  end
end

collectgarbage("collect")


